---
	Module str::prelude
	Standard module implicitly imported by default into all Som modules unless
	explicitly disabled using the `no_prelude` or `no_stdlib` directive.

	This file is part of the Som standard library.

	Copyright (c) 2023 Sjoerd Vermeulen

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
---

!!.stdlib
!!.warn_redef "redefinition may break stdlib"

--- public imports ---

use * from std::types
use * from std::ops
use Str from std::str

--- private imports ---

use std::types as _std_types
use std::list as _std_list
use std::ops as _std_ops
use std::str as _std_str

use
	putsf as _putsf,
	stderr as _stderr
from std::io

--- functions ---

-- wraps a value in an effect
let return v : 'a -> !'a = v

-- terminates the calling process immediately with the given status
let exit status : Int -> Nll =
	#_som_std_prelude_exit status,
	!!unreachable

let assert cond msg : Bln -> Str -> Nll =
	if cond then
		_putsf _stderr msg,
		exit 1
	else ()

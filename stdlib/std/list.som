---
  Module std::list
  Standard module containing the list types and functions for list operations.

  This file is part of the Som standard library.

  Copyright (c) 2023 Sjoerd Vermeulen

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
---

-- !!.stdlib
-- !!.warn_redef "redefinition may break stdlib"

type 'a List of Cons 'a ; 'a List | Nil

let concat l1 l2 : 'a List -> 'a List -> 'a List =
  match l1
    | Cons hd ; tl then Cons (hd ; concat tl l2)
    | Nil then l2

let append l x : 'a List -> 'a -> 'a List =
  concat l (Cons (x ; Nil))


let map f l: ('a -> 'b) -> 'a List -> 'b List =
  match l
    | Cons hd ; tl then Cons (f hd ; map f tl)
    | Nil then Nil
